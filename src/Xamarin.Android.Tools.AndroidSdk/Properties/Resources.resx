<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  
  
  <data name="XamarinAndroidTools_XAT0001" xml:space="preserve">
    <value>App manifest does not have 'manifest' root element</value>
    <comment>The following are literal names and should not be translated: manifest</comment>
  </data>
  <data name="XamarinAndroidTools_XAT0002" xml:space="preserve">
    <value>Must specify a package name or assembly name</value>
    <comment>"package name" refers to the Java programming language "package" concept.</comment>
  </data>
  
  <data name="XamarinAndroidTools_XAT0003" xml:space="preserve">
    <value>Could not determine Android SDK location. Please provide {0}.</value>
    <comment>The following are literal names and should not be translated: Android SD
{0} - the name of the C# method parameter causing an exception to be thrown.</comment>
  </data>
  
  <data name="XamarinAndroidTools_XAT0004" xml:space="preserve">
    <value>Could not determine Java SDK location. Please provide {0}.</value>
    <comment>The following are literal names and should not be translated: Java SDK
{0} - the name of the C# method parameter causing an exception to be thrown.</comment>
  </data>
  
  <data name="XamarinAndroidTools_XAT0005" xml:space="preserve">
    <value>Windows is not supported at this time.</value>
  </data>
  
  <data name="XamarinAndroidTools_XAT0006" xml:space="preserve">
    <value>No Microsoft OpenJDK could be found.  Please re-run the Visual Studio installer or manually specify the JDK path in settings.</value>
    <comment>The following are literal names and should not be translated: OpenJDK</comment>
  </data>

  <data name="XamarinAndroidTools_XAT0007" xml:space="preserve">
    <value>`{0}` must be a directory!</value>
    <comment>{0} - the name of the C# method parameter causing an exception to be thrown.</comment>
  </data>

  <data name="XamarinAndroidTools_XAT0008" xml:space="preserve">
    <value>Not a directory</value>
  </data>
  
  <data name="XamarinAndroidTools_XAT0009" xml:space="preserve">
    <value>Requested to get one string value when property `{0}` contains `{1}` values.</value>
    <comment>{0} - a property name
{1} - the number of values that {0} contains.</comment>
  </data>
    
  <data name="XamarinAndroidTools_XAT0010" xml:space="preserve">
    <value>Could not find required file `{0}` within `{1}`; is this a valid JDK?</value>
    <comment>The following are literal names and should not be translated: JDK
{0} - a file that is being looked.
{1} - The directory where {0} is being looked for.</comment>
  </data>
  
  <data name="XamarinAndroidTools_XAT0011" xml:space="preserve">
    <value>Unknown property key for value {0}!</value>
    <comment>{0} - the value that is being processed, which is not understood.</comment>
  </data>
  
  <data name="XamarinAndroidTools_XAT0013" xml:space="preserve">
    <value>The directory `{0}`, via locator `{1}`, is not a valid JDK directory: {2}</value>
    <comment>{0} - a directory
{1} - a "contextual" name for where {0} came from; from a config file? the registry? environment variable? etc.
{2} - the `Exception.Message` from the exception prompting us to show this message.</comment>
  </data>
  
  <data name="XamarinAndroidTools_XAT0014" xml:space="preserve">
    <value>Could not open or create key</value>
    <comment>"key" refers to a Windows Registry key</comment>
  </data>
  
  <data name="XamarinAndroidTools_XAT0015" xml:space="preserve">
    <value>Error {0} setting registry key '{1}{2}@{3}'='{4}'</value>
    <comment>"registry key" refers to a Windows Registry key
{0} - The return value of a `RegSetValueExW()` call
{1} - The Windows registry key we're trying to set
{2} - A Windows registry "subkey"
{3} - The Windows registry key name
{4} - The value we were trying to set</comment>
  </data>
  
  <data name="XamarinAndroidTools_XAT0016" xml:space="preserve">
    <value>The program `{0}` returned non-zero exit code.</value>
    <comment>{0} - The name of the program which generated an error</comment>
  </data>
   
  <data name="XamarinAndroidTools_XAT0017" xml:space="preserve">
    <value>Could not determine Java version.</value>
  </data>
  
</root>